name: Deploy React Client to AWS EC2

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image for React app
        run: |
          docker build -t react-client-slt -f ./frontend/Dockerfile .
          docker tag react-client-slt oracio/react-client-slt:latest
          docker push oracio/react-client-slt:latest


      - name: Add runner IP to AWS Security Group
        uses: sohelamin/aws-security-group-add-ip-action@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-security-group-id: ${{ secrets.AWS_SECURITY_GROUP_ID }}
          port: '22'
          to-port: '22'
          protocol: 'tcp'
          description: 'GitHub Action slt'
      
      - name: Deploy React app to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            docker pull oracio/react-client-slt:latest

            if [ "$(docker ps -aq -f name=react-client-slt-container)" ]; then
              docker stop react-client-slt-container
              docker rm react-client-slt-container
            fi            

            docker run -d \
            --name react-client-slt-container \
            oracio/react-client-slt:latest
